{"ast":null,"code":"var _jsxFileName = \"/Users/naeem/Desktop/ReactTutorial/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": [{\n    \"id\": \"F101\",\n    \"title\": \"Computer Science: Concepts, Philosophy, and Connections\",\n    \"meets\": \"MWF 11:00-11:50\"\n  }, {\n    \"id\": \"F110\",\n    \"title\": \"Intro Programming for non-majors\",\n    \"meets\": \"MWF 10:00-10:50\"\n  }, {\n    \"id\": \"F111\",\n    \"title\": \"Fundamentals of Computer Programming I\",\n    \"meets\": \"MWF 13:00-13:50\"\n  }, {\n    \"id\": \"W111\",\n    \"title\": \"Fundamentals of Computer Programming I\",\n    \"meets\": \"MWF 11:00-11:50\"\n  }, {\n    \"id\": \"F211\",\n    \"title\": \"Fundamentals of Computer Programming II\",\n    \"meets\": \"TuTh 12:30-13:50\"\n  }]\n};\nconst terms = {\n  F: 'Fall',\n  W: 'Winter',\n  S: 'Spring'\n};\n\nconst Banner = ({\n  title\n}) => /*#__PURE__*/React.createElement(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }\n}, title);\n\nconst getCourseTerm = course => terms[course.id.charAt(0)];\n\nconst getCourseNumber = course => course.id.slice(1, 4);\n\nconst buttonColor = selected => selected ? 'success' : null;\n\nconst TermSelector = () => /*#__PURE__*/React.createElement(Button.Group, {\n  hasAddons: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, Object.values(terms).map(value => /*#__PURE__*/React.createElement(Button, {\n  key: value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }\n}, value)));\n\nconst Course = ({\n  course\n}) => /*#__PURE__*/React.createElement(Button, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n}, getCourseTerm(course), \" CS \", getCourseNumber(course), \": \", course.title);\n\nconst CourseList = ({\n  courses\n}) => {\n  const [term, setTerm] = useState('Fall');\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TermSelector, {\n    term: term,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, termCourses.map(course => /*#__PURE__*/React.createElement(Course, {\n    key: course.id,\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }))));\n};\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({\n    title: '',\n    courses: []\n  });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    };\n\n    fetchSchedule();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    title: schedule.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CourseList, {\n    courses: schedule.courses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/naeem/Desktop/ReactTutorial/src/App.js"],"names":["React","useState","useEffect","Button","Container","Title","schedule","terms","F","W","S","Banner","title","getCourseTerm","course","id","charAt","getCourseNumber","slice","buttonColor","selected","TermSelector","Object","values","map","value","Course","CourseList","courses","term","setTerm","termCourses","filter","App","setSchedule","url","fetchSchedule","response","fetch","ok","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'rbx/index.css';\nimport { Button, Container, Title } from 'rbx';\n\nconst schedule = {\n  \"title\": \"CS Courses for 2018-2019\",\n  \"courses\": [\n    {\n      \"id\": \"F101\",\n      \"title\": \"Computer Science: Concepts, Philosophy, and Connections\",\n      \"meets\": \"MWF 11:00-11:50\"\n    },\n    {\n      \"id\": \"F110\",\n      \"title\": \"Intro Programming for non-majors\",\n      \"meets\": \"MWF 10:00-10:50\"\n    },\n    {\n      \"id\": \"F111\",\n      \"title\": \"Fundamentals of Computer Programming I\",\n      \"meets\": \"MWF 13:00-13:50\"\n    },\n    {\n      \"id\": \"W111\",\n      \"title\": \"Fundamentals of Computer Programming I\",\n      \"meets\": \"MWF 11:00-11:50\"\n    },\n    {\n      \"id\": \"F211\",\n      \"title\": \"Fundamentals of Computer Programming II\",\n      \"meets\": \"TuTh 12:30-13:50\"\n    }\n  ]\n};\n\nconst terms = { F: 'Fall', W: 'Winter', S: 'Spring'};\n\nconst Banner = ({ title }) => (\n  <Title>{ title }</Title>\n);\n\nconst getCourseTerm = course => (\n  terms[course.id.charAt(0)]\n);\n\nconst getCourseNumber = course => (\n  course.id.slice(1, 4)\n)\n\nconst buttonColor = selected => (\n  selected ? 'success' : null\n);\n\n\nconst TermSelector = () => (\n  <Button.Group hasAddons>\n    { Object.values(terms)\n        .map(value => <Button key={value}>{ value }</Button>\n        )\n    }\n  </Button.Group>\n);\n\nconst Course = ({ course }) => (\n  <Button>\n    { getCourseTerm(course) } CS { getCourseNumber(course) }: { course.title }\n  </Button>\n);\n\nconst CourseList = ({ courses }) => {\n  const [term, setTerm] = useState('Fall');\n  const termCourses = courses.filter(course => term === getCourseTerm(course));\n  return (\n    <React.Fragment>\n      <TermSelector term={ term } />\n      <Button.Group>\n        { termCourses.map(course => <Course key={ course.id } course={ course } />) }\n      </Button.Group>\n    </React.Fragment>\n  );\n};\n\nconst App = () => {\n  const [schedule, setSchedule] = useState({ title: '', courses: [] });\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\n\n  useEffect(() => {\n    const fetchSchedule = async () => {\n      const response = await fetch(url);\n      if (!response.ok) throw response;\n      const json = await response.json();\n      setSchedule(json);\n    }\n    fetchSchedule();\n  }, [])\n\n  return (\n    <Container>\n      <Banner title={ schedule.title } />\n      <CourseList courses={ schedule.courses } />\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}